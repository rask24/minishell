name: Continuous Integration
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  norm:
    name: Norminette
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install norminette
      - name: Run Norminette
        run: make norm

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      - name: Build project
        run: make all -j

  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      - name: Run tests
        run: |
          make all -j
          make test -j


  covrage:
    name: Generate and Upload Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      - name: Build with coverage
        run: make coverage
      - name: Generate coverage report
        run: make report_coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          flags: unittests
          fail_ci_if_error: true

  e2e_test:
    name: End-to-End Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
      - name: Build project
        run: make all -j
      - uses: actions/setup-python@v2
        with:
          python-version: '3.12.4'
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install -r tests/e2e/requirements.txt
      - name: Run End-to-End tests
        run: pytest -vv tests/e2e
